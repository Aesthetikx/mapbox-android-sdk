buildscript {

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:0.8.+'
        classpath 'com.github.dcendents:android-maven-plugin:1.0'
        classpath 'org.gradle.api.plugins:gradle-nexus-plugin:0.7'
    }

}

apply plugin: 'android-library'
apply plugin: 'android-maven'
apply plugin: 'nexus'

group = 'com.mapbox.mapboxsdk'
version = '0.1.1-SNAPSHOT'

repositories {
    mavenCentral()
    flatDir {
        dirs '../libs'
    }
}

// runtime dependencies
dependencies {
    compile ('com.github.chrisbanes.bitmapcache:BitmapCache:2.4+@aar') {
        transitive = true
        exclude module: 'support-v4'
    }
    compile 'com.android.support:support-v4:19.1.+'
    // http requests
    compile 'com.squareup.okhttp:okhttp:1.3.0'
    // compatibility with older android versions
    compile 'com.nineoldandroids:library:2.4.0'
    // disk caching
    compile 'com.jakewharton:disklrucache:2.0.1'
    // type-safety tricks
    compile 'com.google.guava:guava:16.0.1'
}

android {

    compileSdkVersion 19
    buildToolsVersion "19.0.3"

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 19
        versionCode 1
        versionName "1.0"
        packageName "com.mapbox.mapboxsdk"
    }

    sourceSets {
        main {

            manifest.srcFile 'src/main/AndroidManifest.xml'

            java.srcDirs = ['src/main/java']

            resources.srcDirs = ['src/main/resources']

            res.srcDirs = ['src/main/res']

            assets {
                srcDir 'assets'
            }
        }
    }

    lintOptions {
        abortOnError false
    }
}

android.libraryVariants.all { variant ->

    // build javadoc documentation, making sure to exclude generated files
    // like R.java and include links to Android-specific functionality.
    task("generate${variant.name}Javadoc", type: Javadoc) {
        title = "$name $version API"
        description "Generates Javadoc for $variant.name."
        source = variant.javaCompile.source
        ext.androidJar = "${android.plugin.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
        options.links("http://docs.oracle.com/javase/7/docs/api/");
        options.links("http://d.android.com/reference/");
        exclude '**/BuildConfig.java'
        exclude '**/R.java'
    }

    def name = variant.buildType.name
    if (name.equals(com.android.builder.BuilderConstants.DEBUG)) {
        return; // Skip debug builds.
    }
    def task = project.tasks.create "jar${name.capitalize()}", Jar
    task.dependsOn variant.javaCompile
    task.from variant.javaCompile.destinationDir
    artifacts.add('archives', task);

}

modifyPom {
    project {
        name 'Mapbox Android SDK'
        description 'An Open-Source Library for Flexible, Interactive, and Fast Maps'
        url 'https://github.com/mapbox/mapbox-android-sdk'
        inceptionYear '2014'

        scm {
            url 'https://github.com/mapbox/mapbox-android-sdk'
            connection 'scm:https://mapbox@github.com/mapbox/mapbox-android-sdk.git'
            developerConnection 'scm:git://github.com/mapbox/mapbox-android-sdk.git'
        }

        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                distribution 'repo'
            }
        }

        developers {
            developer {
                id 'mapbox'
                name 'Tom MacWright'
                email 'tom@macwright.org'
            }
        }
    }
}

